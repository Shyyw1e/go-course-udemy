/*
‚úÖ –ó–∞–¥–∞—á–∞ 10 ‚Äî –†–µ–¥–∏—Ä–µ–∫—Ç
–£—Å–ª–æ–≤–∏–µ:
–°–æ–∑–¥–∞–π —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –ø–æ –∞–¥—Ä–µ—Å—É /redirect –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç https://example.com.

üîß –ü–æ–¥—Å–∫–∞–∑–∫–∞:

–ò—Å–ø–æ–ª—å–∑—É–π http.Redirect(w, r, "https://example.com", http.StatusFound)

–ö–æ–¥ http.StatusFound (302) —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç.
*/

package gpt_tasks_http

import (
	"fmt"
	"net/http"
)

func redirHandler(w http.ResponseWriter, r *http.Request) {
	http.Redirect(w, r, "https://example.com", http.StatusFound)
}

func Task10() {
	http.HandleFunc("/redirect", redirHandler)

	fmt.Println("Server listening at :8080")
	http.ListenAndServe(":8080", nil)
}