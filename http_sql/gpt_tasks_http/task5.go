/*
5. –ü—Ä–∏–º–µ—Ä —Å POST-–∑–∞–ø—Ä–æ—Å–æ–º
–ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç JSON –Ω–∞ https://httpbin.org/post –∏ –≤—ã–≤–æ–¥–∏—Ç JSON-–æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞.

üîπ –ü–æ–¥—Å–∫–∞–∑–∫–∞: http.NewRequest("POST", ...) + req.Header.Set("Content-Type", "application/json")
*/

package gpt_tasks_http

import (
	"bytes"
	"fmt"
	"io"
	"net/http"
)

func Task5() {
	jsondata := []byte(`{"name": "Alex", "age": 30}`)
	req, err := http.NewRequest("POST", "https://httpbin.org/post", bytes.NewReader(jsondata))
	if err != nil {
		fmt.Printf("invalid request: %s", err)
		return
	}
	req.Header.Set("Content-Type", "application/json")

	client := &http.Client{}

	resp, err := client.Do(req)
	if err != nil {
		fmt.Printf("invalid client: %s", err)
		return
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		fmt.Printf("failed to read response: %s", err)
		return
	}

	fmt.Println("Response:")
	fmt.Println("Status: ", resp.Status)
	fmt.Println("Body: ")
	fmt.Println(string(body))


}